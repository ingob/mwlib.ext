The utils module is intended for non distribution stuff eg cvs_check.py.
To run the daily script you need a .cvspass entry for cvs1:/cvsroot/reportlab.

I have instituted a daily crontab job on sourceforge. Each day around 5 am VA Linux time (I
think it's PST) we build two files in our FTP area called current.tgz & current.zip. These are
intended as source archives and have the CVS dirs removed.

The script used for the daily run is utils/daily.py. It can also be used with
a release argument (the tag to be used).

ie to create current.tgz & current.zip in /home/groups/ftp/pub/reportlab
	python daily.py

to create reportlab_yyyymmdd.zip/.tgz in /home/groups/ftp/pub/reportlab as a release
with tag TTT
	python daily.py -release TTT

The files current.zip/.tgz and reportlab.zip/.tgz will then be linked to the created files.

I don't know enough yet, but Cyclops looks like a really great tool.

The utils/runtests.py script has a command line like

   python runtests.py [options]

    option
    -help           print this message and exit
    -dir path       directory to test default /tmp/reportlab_test/reportlab
    -cycles[=flags] check for cycles using Tim Peter's Cyclops cycle finder
                    flags=s(tats), a(rcs), C(omponents), c(ycles), o(bjects)
    -notest         don't carry out tests
    -clean          cleanup if no errors
    -fclean         cleanup even if some errors occur

As there were a fair number of problems, I am looking at the output of
	python runtests.py -dir \python\reportlab -cycles=s


Release Procedure
1) edit reportlab/__init__.py and insert the new version number d.xy

2) use cvs -z7 log >/tmp/log followed by
   python utils/cvslh.py -d"2000/mm/dd hh:mm:ss" -s -r </tmp/log >/tmp/logh
   to get a list of the latest changes. The date & time should correspond to
   the previous release. Add the changes into the reportlab changes file at
   the top. These changes should probably be trimmed.
   
3)	Commit the alterations to __init__.py and changes

4)	Assign a release tag to the repository for us this is done in a working
	copy of ReportLab using
		cvs -z7 tag ReportLab_d_xy
	where d.xy was the version number entered into __init__.py

5)	Login to othala.pair.com

	cd bin
	./daily.py -release ReportLab_d_xy

	this should create the files ~/ReportLab_d_xy.tgz/.zip
	the links ~/public_ftp/reportlab.tgz/.zip should be pointing to the 
	ne archives

	The current.tgz/.zip will be out of phase so we should also run
	./daily.py

	and if we know that the idle py2pdf patch works
	./daily.py -py2pdf to create the cutdown distribution for idle

6)	Finally we need to edit ~/public_html/news.html around line 117 we should see
	ReportLab News and customer comments

	add the new release at the top
	ie
	 <dt><b>11 July 2000</b><dd>ReportLab d.xy Released; main changes are etc etc

7)	Optional announcements made to clt, reportlab-users, reportlab-team
